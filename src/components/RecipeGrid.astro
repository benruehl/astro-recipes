---
import { getCollection, type CollectionEntry } from 'astro:content';
import NewRecipeCard from '../components/recipe-card/RecipeCard.astro';
import Grid from './common/Grid.astro';

type Recipe = CollectionEntry<'recipes'>;
type Category = Recipe["data"]["category"];

const allRecipes = await getCollection('recipes');

const categoryMap: { [id in Category ] : string } = {
    SideDish: "Beilagen",
    Salad: "Salate",
    Dressing: "Dressings"
};
const categories = Object.keys(categoryMap) as Array<keyof typeof categoryMap>;
---

{categories.map(category => (
    <h2>{categoryMap[category]}</h2>
    <Grid class="cards-list" minItemWidth="300px" maxColumns={3} gap="4rem">
        {allRecipes.filter(r => r.data.category === category).map(recipe => {
            return <NewRecipeCard recipe={recipe}/>
        })}
    </Grid>
))}

<style lang="scss">
    h2 {
        font-size: min(4rem, 20vw);
		color: rgb(var(--text-lighter));
		margin: 1.5em 0 .5em 0;
    }

    .cards-list {
        position: relative;
        margin-bottom: 2rem;

        &::before {
            content: "";
            position: absolute;
            inset: -2rem;
            top: 4rem;
            border-radius: 2rem;
            background-color: #1f1f1f;
            background-image: url("data:image/svg+xml,%3Csvg fill='%231c1c1c' width='40' height='40' viewBox='0 0 40 40' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M20 20.5V18H0v-2h20v-2H0v-2h20v-2H0V8h20V6H0V4h20V2H0V0h22v20h2V0h2v20h2V0h2v20h2V0h2v20h2V0h2v20h2v2H20v-1.5zM0 20h2v20H0V20zm4 0h2v20H4V20zm4 0h2v20H8V20zm4 0h2v20h-2V20zm4 0h2v20h-2V20zm4 4h20v2H20v-2zm0 4h20v2H20v-2zm0 4h20v2H20v-2zm0 4h20v2H20v-2z' fill-opacity='1' fill-rule='evenodd'/%3E%3C/svg%3E");
        }
    }
</style>
