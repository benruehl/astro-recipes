---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import Card3D from '../card-3d/Card3D.astro';
import CardContent from '../card-3d/CardContent.astro';
import NewCardBackground from './CardBackground.astro';
import NewRecipeCardContent from './RecipeCardContent.astro';
import LayeredRecipeImage from './LayeredRecipeImage.astro';

type Recipe = CollectionEntry<'recipes'>;

interface Props {
  recipe: Recipe;
}

const { recipe } = Astro.props;
const baseUrl = import.meta.env.BASE_URL;
---

<a class="card-container overlay-container" href=`${baseUrl}/recipes/${recipe.id}`>
    <Card3D>
        <div class="card-layout overlay-container">
            <NewCardBackground
                class="card-background"
                startColor={recipe.data.background?.startColor}
                endColor={recipe.data.background?.endColor}
            />
            {recipe.data.imageLayers && (
                <LayeredRecipeImage imageLayers={recipe.data.imageLayers} title={recipe.data.title}/>
            )}
        </div>
    </Card3D>
    <NewRecipeCardContent class="card-bottom" recipe={recipe}/>
</a>

<style lang="scss">
    .card-container {
        width: 340px;
        aspect-ratio: 57 / 89;
        transition: transform 0.2s;

        &::before {
            content: "";
            position: absolute;
            inset: .5rem -.5rem -.5rem .5rem;
            background: rgba(0, 0, 0, .2);
            border-radius: 1.4rem;
            transition: transform 0.2s;
            transform-origin: top left;
        }

        &:hover {
            transform: scale(1.025);

            &::before {
                transform: translate(.5rem, .25rem);
            }
        }

        .card-bottom {
            align-self: flex-end;
            pointer-events: none;
        }
    }

    .card-layout {
        width: 110%;
        height: 100%;
        margin: -5%;
    }

    .card-background {
        scale: 1.25;
    }

    .overlay-container {
        display: grid;
        grid-template-areas: "overlay";
        transform-style: preserve-3d;

        :global(> *) {
            grid-area: overlay;
            min-width: 0;
        }
    }

    :global(.card-3d--focused) {
        img {
            transform: scale(1.15);
        }
    }

    a {
        all: unset;
        cursor: pointer;
        position: relative;
    }
</style>